#setting api port
port: 6001
#setting health check endpoint
health-check-endpoint: "/v1/health"

#setting https only if true http is port is disable require ssl-port, ssl-cert-file, ssl-key-file
https-only: false
ssl-enable: true
ssl-port: 6443
ssl-cert-file: "./certs/localhost.crt"
ssl-key-file: "./certs/localhost.key"
CORS:
  # allow-origins defines a list of origins that may access the resource.
  # Optional. *.
  allow-origins:
    - "http://127.0.0.1:5500"
  # allow-methods defines a list methods allowed when accessing the resource.
  # This is used in response to a preflight request.
  # Optional. Default value GET, HEAD, PUT, PATCH, POST, DELETE, OPTIONS.
  #allow-methods:
  #  - "GET"
  #  - "PUT"
  #  - "POST"
  #  - "DELETE"
  #  - "OPTIONS"
  # allow-headers defines a list of request headers that can be used when
  # making the actual request. This is in response to a preflight request.
  # Optional. Default value Origin, Content-Type, Accept, Accept-Encoding, Access-Control-Allow-Headers,
  # Access-Control-Allow-Methods, Access-Control-Allow-Origin,
  # X-Requested-With, Authorization, X-CSRF-Token, X-Forwarded-For, X-Real-IP.
  #allow-headers:
  #  - "Origin"
  #  - "Content-Type"
  #  - "Accept"
  #  - "Authorization"
  # allow-credentials indicates whether or not the response to the request
  # can be exposed when the credentials flag is true. When used as part of
  # a response to a preflight request, this indicates whether or not the
  # actual request can be made using credentials.
  # Optional. Default value false.
  allow-credentials: true
  # expose-headers defines a whitelist headers that clients are allowed to
  # access.
  # Optional. Default value ""
  # expose-headers:
  # MaxAge indicates how long (in seconds) the results of a preflight request
  # can be cached.
  # Optional. Default value 0
  max-age: 0

#setting log file location if empty will log to stdout only
log-file-location: "./logs/app.log"
#setting log file max size (megabytes)
#if less than 50 default will be 500
log-max-size: 200
#setting log file max backups
#if less than 1 default will be 3
log-max-backups: 3
#setting log file max age (days)
#if less than 1 default will be 30
log-max-age: 30
#setting log level supported values are "debug", "info", "warn", "error", "panic", "fatal"
#default is "debug" if unknown log level
log-level: "debug"

databases:
  - context-name: "pgdb"
    provider: "postgres"
    url: "localhost:5432"
    user: "pgadmin"
    password: "Ac1qEze89dX1jyz"
    database-name: "exampledb"
    retry-limits: 30
    #the maximum amount of time a dbConn may be reused.
    #Expired connections may be closed lazily before reuse.
    #If d <= 0, connections are not closed due to a dbConn's age.
    connection-max-life-time: 0
    #the maximum number of connections in the idle dbConn pool.
    #If MaxOpenConns is greater than 0 but less than the new MaxIdleConns,
    #then the new MaxIdleConns will be reduced to match the MaxOpenConns limit.
    #If n <= 0, no idle connections are retained.
    #The default max idle connections is currently 2. This may change in a future release.
    max-idle-conns: 10
    #the maximum number of open connections to the database.
    #If MaxIdleConns is greater than 0 and the new MaxOpenConns is less than
    #MaxIdleConns, then MaxIdleConns will be reduced to match the new
    #MaxOpenConns limit.
    #If n <= 0, then there is no limit on the number of open connections.
    #The default is 0 (unlimited).
    max-open-conns: 10
    initial-scripts:
      - "./scripts/employee_pg.sql"

redis:
  #redis context name (required)
  - context-name: "rediscache"
    #redis server endpoint (required)
    endpoint: "localhost:6379"
    #redis password
    password: ""
    #redis database number (default 0)
    db: 0
    #Maximum number of socket connections.
    #Default is 10 connections per every available CPU as reported by runtime.GOMAXPROCS.
    pool-size: 10
    #Minimum number of idle connections which is useful when establishing
    #new connection is slow.
    #default is 5
    min-idle-conns: 5
    #Maximum number of retries before giving up.
    #Default is 3 retries; -1 (not 0) disables retries.
    max-retries: -1
    #Minimum backoff between each retry.
    #Default is 8 milliseconds; -1 disables backoff. (unit is millisecond)
    min-retry-backoff: 10
    #Maximum backoff between each retry.
    #Default is 512 milliseconds; -1 disables backoff. (unit is millisecond)
    max-retry-backoff: 512
    #maximum amount of time a connection may be idle.
    #Should be less than server's timeout.
    #
    #Expired connections may be closed lazily before reuse.
    #If d <= 0, connections are not closed due to a connection's idle time.
    #
    #Default is 30 minutes. -1 disables idle timeout check. (unit is minutes)
    max-idle-time: 30
    #Amount of time client waits for connection if all connections
    #are busy before returning an error.
    #Default is ReadTimeout + 1 second. (unit is second)
    pool-timeout: 60
    #Timeout for socket reads. If reached, commands will fail
    #with a timeout instead of blocking. Supported values:
    # - `0` - default timeout (3 seconds).
    # - `-1` - no timeout (block indefinitely).
    # - `-2` - disables SetReadDeadline calls completely. (unit is second)
    read-timeout: 60
    #Timeout for socket writes. If reached, commands will fail
    #with a timeout instead of blocking.  Supported values:
    # - `0` - default timeout (3 seconds).
    # - `-1` - no timeout (block indefinitely).
    # - `-2` - disables SetWriteDeadline calls completely. (unit is second)
    write-timeout: 60






